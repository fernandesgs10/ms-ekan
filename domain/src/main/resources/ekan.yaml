openapi: 3.0.0
info:
  version: 1.0.0
  title: Swagger Ekan
  description: A sample API as an example to address features in the OpenAPI 3.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://ekan.com

paths:
  /ekan/beneficiary:
    get:
      tags:
        - listBeneficiary
      summary: Returns all beneficiary from the system that the user has access to
      description: Returns all beneficiary from the system that the user has access to
      operationId: listBeneficiary
      parameters:
        - in: query
          name: pageNo
          schema:
            type: integer
            default: 0
          required: false
          description: The number of items to skip before starting to collect the result set.
        - in: query
          name: pageSize
          schema:
            type: integer
            default: 20
          required: false
          description: The number of items to return.
        - in: query
          name: sortBy
          schema:
            type: array
            items:
              type: string

      responses:
        '200':
          description: beneficiary response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/page"
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: "#/components/schemas/pageBeneficiary"

        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'

        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generalError'


  /ekan/beneficiary/coSeqBeneficiary/{coSeqBeneficiary}:
    get:
      tags:
        - listBeneficiaryByCoSeqBeneficiary
      summary: Returns a beneficiary based on a single name
      description: Returns a beneficiary based on a name
      operationId: listBeneficiaryByCoSeqBeneficiary
      parameters:
        - name: coSeqBeneficiary
          in: path
          description: coSeqBeneficiary beneficiary
          required: true
          schema:
            type: integer

      responses:
        '200':
          description: beneficiary response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/page"
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: "#/components/schemas/pageBeneficiary"

        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'

        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generalError'


  /ekan/beneficiary/createBeneficiary:
    post:
      tags:
        - createBeneficiary
      summary: Add a new beneficiary
      operationId: createBeneficiary
      requestBody:
        description: Optional description in new beneficiary
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/beneficiary'
      responses:
        '201':
          description: Created
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generalError'


  /ekan/beneficiary/alter-beneficiary:
    put:
      tags:
        - alterBeneficiary
      summary: Alter a beneficiary
      operationId: alterBeneficiary
      requestBody:
        description: Optional description in update beneficiary
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/beneficiary'
      responses:
        '200':
          description: altered
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generalError'


  /ekan/beneficiary/remove/coSeqBeneficiary/{coSeqBeneficiary}:
    delete:
      tags:
        - removeByCoSeqBeneficiary
      summary: remove a beneficiary
      description: remove a beneficiary by coSeqBeneficiary
      operationId: removeByCoSeqBeneficiary
      parameters:
        - name: coSeqBeneficiary
          in: path
          description: remove by remove
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: removed

        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generalError'


components:
  schemas:
    pageBeneficiary:
      allOf:
        - $ref: '#/components/schemas/beneficiary'
        - type: object

    beneficiary:
      type: object
      required:
        - nmName
        - ddBirthDate
      properties:
        coSeqBeneficiary:
          type: number
        nmName:
          type: string
          minItems: 1
        nmTelephone:
          type: string
        ddBirthDate:
          type: string
          format: date
        dtCreated:
          type: string
          format: date-time
        dtEdited:
          type: string
          format: date-time
        documents:
          type: array
          items:
            $ref: "#/components/schemas/document"

    document:
      type: object
      required:
        - coSeqBeneficiary
      properties:
        coSeqDocumentary:
          type: number
        nmDescription:
          type: string
          minItems: 1
        tpDocument:
          type: string
          enum:
            - rg
            - cpf
        dtCreated:
          type: string
          format: date-time
        dtEdited:
          type: string
          format: date-time

    genericMessage:
      type: object
      properties:
        message:
          type: string

    notFound:
      type: object
      properties:
        schema:
          $ref: "#/components/schemas/genericMessage"

    generalError:
      type: object
      properties:
        schema:
          $ref: "#/components/schemas/genericMessage"

    sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: number

    pageable:
      type: object
      properties:
        pageNumber:
          type: number
        pageSize:
          type: number
        offset:
          type: number
        paged:
          type: boolean
        unpaged:
          type: boolean
        sort:
          $ref: '#/components/schemas/sort'

    page:
      type: object
      properties:
        totalElements:
          type: number
        totalPages:
          type: number
        last:
          type: boolean
        size:
          type: number
        number:
          type: number
        first:
          type: boolean
        numberOfElements:
          type: number
        empty:
          type: boolean
        content:
          type: array
          items:
            type: object
        pageable:
          $ref: '#/components/schemas/pageable'
        sort:
          $ref: '#/components/schemas/sort'